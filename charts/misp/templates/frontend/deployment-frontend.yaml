apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "misp.fullname" . }}-frontend
  labels:
    {{- include "misp.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.frontend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "misp.frontend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "misp.frontend.selectorLabels" . | nindent 8 }}

    spec:
      {{- with .Values.frontend.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "misp.frontend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              scheme: HTTPS
              port: https
          readinessProbe:
            httpGet:
              path: /
              scheme: HTTPS
              port: https
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: REDIS_FQDN
            valueFrom:
              configMapKeyRef:
                name: application-config
                key: redis_host
          volumeMounts:
            - mountPath: /etc/nginx/certs
              name: nginx-certs
{{- if .Values.persistentVolume.enabled }}
            - mountPath: /var/www/MISP/app/webroot/img/orgs
              name: persistent-storage-misp
              subPath: orgs
            - mountPath: /var/www/MISP/app/webroot/img/custom
              name: persistent-storage-misp
              subPath: custom
{{- end }}
            - name: bootstrap-config
              mountPath: /var/www/MISP/app/Config/bootstrap.php
              subPath: bootstrap.php
            - name: core-config
              mountPath: /var/www/MISP/app/Config/core.php
              subPath: core.php
            - name: application-config
              mountPath: /var/www/MISP/app/Config/config.php
              subPath: config.php
            - name: database-config
              mountPath: /var/www/MISP/app/Config/database.php
              subPath: database.php
            - name: email-config
              mountPath: /var/www/MISP/app/Config/email.php
              subPath: email.php
            - name: routes-config
              mountPath: /var/www/MISP/app/Config/routes.php
              subPath: routes.php
{{- if .Values.config.gpgKey }}
            - name: gpg-key
              mountPath: /var/www/MISP/app/webroot/gpg.asc
              subPath: gpg.asc
{{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: nginx-certs
        secret:
          secretName: {{ .Values.frontend.ssl.secretName | default (printf "%s-tls-frontend" (include "misp.fullname" .)) }}
          optional: false
      - name: gpg-key
        configMap:
          name: {{ include "misp.fullname" . }}-config-gpg-frontend
      - name: database-config
        secret:
          secretName: {{ .Values.config.databaseSecretName }}
      - name: application-config
        configMap:
          name: {{ .Values.config.configConfigMapName }}
      - name: core-config
        configMap:
          name: {{ .Values.config.coreConfigMapName }}
      - name: bootstrap-config
        configMap:
          name: {{ .Values.config.bootstrapConfigMapName }}
      - name: email-config
        configMap:
          name: {{ .Values.config.emailConfigMapName }}
      - name: routes-config
        configMap:
          name: {{ .Values.config.routesConfigMapName }}
{{- if .Values.persistentVolume.enabled }}
      - name: persistent-storage-misp
        persistentVolumeClaim:
          claimName: {{ include "misp.fullname" . }}-frontend
{{- end -}}